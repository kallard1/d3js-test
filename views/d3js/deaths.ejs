<p>Confirmed: <%= data.latest.confirmed %></p>
<p>Deaths: <%= data.latest.deaths %></p>

<svg id="graph-container"></svg>

<script src="https://d3js.org/d3.v5.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/lodash@4.17.15/lodash.min.js"></script>

<script>
  const data = <%- JSON.stringify(data) %>;

  const max = _.maxBy(data.locations, (location) => location.latest.deaths);

  const margin = 100;
  const width = window.innerWidth - 2 * margin
  const height = window.innerHeight - 2 * margin;

  const svg = d3.select("#graph-container")
    .attr("width", width + 2 * margin)
    .attr("height", height + 2 * margin);

  const chart = svg.append('g')
    .attr("transform", "translate(" + margin + "," + margin + ")");

  const xScale = d3.scaleBand()
    .range([0, width])
    .domain(data.locations.map(location => location.country))
    .padding(0.1);

  const yScale = d3.scaleLinear()
    .range([height, 0])
    .domain([0, max.latest.deaths]);

  chart.append('g')
    .call(d3.axisLeft(yScale))

  chart.append('g')
    .attr("transform", "translate(0," + height + ")")
    .call(d3.axisBottom(xScale))

  chart.append('g')
    .attr('class', 'grid')
    .call(d3.axisLeft()
      .scale(yScale)
      .tickSize(-width, 0, 0)
      .tickFormat(''))

  svg
    .append('text')
    .attr('class', 'label')
    .attr('x', -(height / 2) - margin)
    .attr('y', margin / 2.4)
    .attr('transform', 'rotate(-90)')
    .attr('text-anchor', 'middle')
    .text('Nombre de décès')
    .attr('stroke', 'white')

  svg.append('text')
    .attr('class', 'label')
    .attr('x', width / 2 + margin)
    .attr('y', height + margin * 1.7)
    .text('Pays')
    .attr('stroke', 'white')

  svg.append('text')
    .attr('class', 'title')
    .attr('x', width / 2 + margin)
    .attr('y', 40)
    .text('Nombre de morts par pays')
    .attr('stroke', 'white')

  svg.append('text')
    .attr('class', 'source')
    .attr('x', width - margin / 1)
    .attr('y', height + margin * 1.7)
    .attr('text-anchor', 'start')
    .text('Source: coronavirus-tracker-api')
    .attr('stroke', 'white')

  const barGroups = chart.selectAll()
    .data(data.locations)
    .enter()
    .append('g')
    .attr('class', 'barContainer')

  barGroups
    .append('rect')
    .attr('class', 'bar')
    .attr("fill", (_, i) => `rgb(${i * 20}, ${Math.round(i * 20 / 2)}, 200)`)
    .transition()
    .duration(200)
    .delay((d, i) => i * 70)
    .attr('x', (s) => xScale(s.country))
    .attr('y', (s) => yScale(s.latest.deaths))
    .attr('height', (s) => height - Math.round(yScale(s.latest.deaths)))
    .attr('width', xScale.bandwidth())

  // barGroups.on('mouseenter', (actual, i) => {
  //   console.log(actual, i);
  //   const y = yScale(actual.country)
  //   const x = xScale(actual.latest.deaths);
  //
  //   console.log(x);
  //
  //   chart.append('text')
  //       .attr('id', 'info')
  //       .attr('fill', 'white')
  //       .attr('opacity', 1)
  //       .attr('font-size', '14px')
  //       .attr('text-anchor', 'middle')
  //       .attr('x', x + xScale.bandwidth() / 2)
  //       .attr('y', y + 25)
  //       .text(`${actual.country}`);
  // barGroups.append('text')
  //     .attr('x', a => xScale(a.country)  + xScale.bandwidth() / 2)
  //     .attr('y', a => yScale(a.latest.deaths) + 30)
  //     .attr('fill', 'white')
  //     .attr('text-anchor', 'middle') // centrer le texte
  //     .text(a => a.value)
  //     .attr('class', 'divergence')
  //     .text((a, idx) => {
  //       const divergence = (a.latest.deaths - actual.latest.deaths).toFixed(1)
  //       let text = ''
  //       if (divergence > 0) text += '+'
  //       text += `${divergence}%`
  //       return idx !== i ? text : '';
  //     })
  // });

  // barGroups.
  // on("mouseout", function(d) {
  //   d3.select("#info").remove(); // supprimer les infos sur le language où on est
  //   d3.selectAll('.divergence').remove();  // supprimer les différences entre les languages
  // })
</script>
